<template>
<div>
  
   <div>
    <div class="head__detail">
        <img class="head__png" src="{{avatarImg}}"></img>
        <div style="margin-left:20px;">
          <div style="flex-direction:row">
            <text class="name">{{name}}</text>
          </div>
          <div style="flex-direction:row">
            <text class="focus">关注 | {{focus__num}}</text>
            <text class="focus">粉丝 | {{fans__num}}</text>
            <text class="focus">发起 | {{sponsor__num}}</text>
          </div>
        </div> 
   </div>
      <web style="width: 750px;10000px;" src="{{jumpPostSrc}}"></web>
   </div>
   <div>
     
     <list style="height:{{devHeight}};" loadmoreoffset={{pageNo}}>
  <cell>
    <div class="total">
       <!-- 帖子发起者 -->
      
      
       <text class="trend__text">{{content}}</text>
       <!-- 帖子图片内容 -->
       
      

       <div style="height: 20px;background-color:#efefef;margin-top:10px;"></div>
       <!-- 点赞者 -->
       <div id="liker" class="liker"  ontouchstart="test()">
         <div class="liker__num">
           <text style="font-size:24px;color: #fff">赞</text>
           <text style="font-size:20px;color: #fff">{{like__number}}</text>
         </div>
         <img class="liker__head" repeat="{{likers}}" src="{{likerImg}}"></img>
         <div style="width: 20px;"></div>
       </div>
       <div style="height: 20px;background-color:#efefef;margin-top:10px;"></div>
       <!-- 评论 -->
       <text class="talk__number">评论 {{talk__number}}</text>
       <div style="padding-bottom: 30px;border-bottom: 1px solid #efeff0" repeat="{{talks__repeat}}" if="{{shown}}">
         <div  class="talk">
           <img class="talk__png" src="{{talk__png}}"></img>
           <div class="talk__content">
             <div class="talk__head">
               <text class="talk__name">{{talk__name}}</text>
               <text class="talk__time">{{talk__time}}</text>
             </div>
             <text class="talk_main">{{talk__text}}</text>
           </div>
         </div>
         <div class="triangle"></div>
         <div id="replys" repeat="{{replys__repeat}}" class="replys">
             <text class="reply__name">{{name1}}</text>
             <text class="reply">回复</text>
             <text class="reply__name">{{name2}}：</text>
             <text repeat="{{reply__texts}}" class="reply__content">{{reply__text}}</text>
         </div>
        </div>
<!--         <text class="download">下载布偶猫APP</text> -->
    </div>
  </cell>

  <loading class="loading" display="{{loading_display}}" onloading="loading">
      <text class="refresh-arrow" style="text-align: center; color:rgb(238, 162, 54)"
            display="">{{load_more}}
      </text>
      <loading-indicator style="color:#445566;"></loading-indicator>
  </loading>
</list>
   </div>

</div>
</template>



<script>
var postId;
module.exports = {
    data: {
      devHeight:0,
      avatarImg:"",
      pageNo:1,
      name:"",
      focus__num:0,
      fans__num:0,
      sponsor__num:0,
      head:"",
      content:"",
      like__number:0,
      talk__number:0,
      shown:false,
      tempImage:[],
      imageList:[],
      likers:[],
      talks__repeat:[],
      loading_display:"show",
      hasNext:true,
      postId: ""
    },
    methods: {
      loading:function(e){
        // console.log(e)
         this.pageNo+=1;
        this.loading_display="hide";
        if(this.hasNext==true){
          this.getcommentList();
        }
        
        this.loading_display="show";
      },
      alert:function(arg1){
          var modal = require('@weex-module/modal');
          modal.alert({
          message: arg1,
          okTitle: "OK"
          }, function() {
          // TODO after the alert is complete.
          })
      },
      _getData:function(){
          var that=this;
          stream = __weex_require__('@weex-module/stream');
             var $getConfig=this.$getConfig();
          this.devHeight=$getConfig.env.deviceHeight - 1200;

          if($getConfig.env.platform==='iOS'){
             openUrl = $getConfig.openUrl;
             memberToken = $getConfig.memberToken;
             postId=this.postId = $getConfig.postId;
             imgUrl=$getConfig.imgUrl;
          }else if($getConfig.env.platform==='android'){
              openUrl = $getConfig.openUrl;
               memberToken = $getConfig.memberToken;
               postId=this.postId = $getConfig.postId;
               imgUrl=$getConfig.imgUrl;
          }

          //this.alert(postId);
          //memberToken="44a33235788b4165bde0ea2d5cceda28";
            //postId="4847532735769554";
            
            stream.fetch({
              method:"POST",
              url:openUrl+"/v2/post/detail?memberToken="+memberToken+"&postId="+postId,
              type:"json"
            },function(response){

             if(response.status == 200){
                      //这里需要兼容web和Native，Native需要将传递的数据JSON化
                      var data = response.data;
                      try{
                        data = JSON.parse(response.data); 

                      }catch(e){}                 
                      if(data){
                        var obj = data.data;
                            mood=obj;
                            author=mood.author;
                        that.avatarImg=imgUrl + author.avatar;
                        that.name=author.nickname;
                        that.focus__num=author.followNum,
                        that.fans__num=author.fansNum,
                        that.sponsor__num=author.sponsorNum;
                        //that.content=mood.content;
                        //that.opearte(mood.content);
                        that.like__number=mood.likeNum;
                        that.talk__number=mood.commentNum;
                        if(0!==mood.commentNum){
                             that.shown=true;
                        }
                        var imgArr=[];
                        mood.imgList && mood.imgList.forEach(function(value){
                          var url={
                            image:imgUrl+value+"@300w"
                          };
                          imgArr.push(url);
                          //that.tempImage=imgArr;
                        });
                        var flag=0;
                        var timer=setInterval(function(){
                            if(flag<imgArr.length){
                               //that.imageList.push(imgArr[flag]);
                              that.imageList.push(imgArr[flag]);
                              //that.alert(that.imageList[flag]);
                            }else{
                            }
                            flag++;

                        },500);

                      }else{
                       //TODO:
                      }
                    }else{
                        //TODO:错误处理
                        //console.log('--response:--', response);
                    }
                },function(err){
                    //console.log('---err---', err);
                    //TODO:错误处理
            });
            //获取点赞
            stream.fetch({
              method:"POST",
              url:openUrl+"/v2/post/manOfLike?postId="+postId+"&pageNo=1",
              //url:"/v2/post/detail?postId="+postId+"&memberToken=03efaa75d858414a8ac676baae3e2bd9",
              //url:$url+"/v2/post/detail?postId="+postId+"&memberToken=75752510eb7241658b9d1e529f18de33",
              type:"json"
            },function(response){
             if(response.status == 200){
                      //这里需要兼容web和Native，Native需要将传递的数据JSON化
                      var data = response.data;
                      try{
                        data = JSON.parse(response.data); 

                      }catch(e){}
                                                        
                      if(data){
                        var obj = data.data,
                             imgArr=[];
                        obj.list && obj.list.forEach(function(value){
                           var url={
                            likerImg:imgUrl + value.avatar
                          };
                          imgArr.push(url);
                          that.likers=imgArr;
                        });

                      }else{
                       //TODO:
                      }
                    }else{
                        //TODO:错误处理
                        //console.log('--response:--', response);
                    }
                },function(err){
                    //console.log('---err---', err);
                    //TODO:错误处理
            });

            that.getcommentList();
            
            
      },
      test:function(evt){
        //console.log(evt.target);
 
        this.test1=evt.target;

      },
      getcommentList:function(){
        var that=this;
        stream.fetch({
                method:"POST",
                url:openUrl+"/v2/post/commentList?memberToken="+memberToken+"&postId="+postId+"&pageNo="+this.pageNo,
                //url:"/v2/post/detail?postId="+postId+"&memberToken=03efaa75d858414a8ac676baae3e2bd9",
                //url:$url+"/v2/post/detail?postId="+postId+"&memberToken=75752510eb7241658b9d1e529f18de33",
                type:"json"
              },function(response){
               if(response.status == 200){
                        
                        //这里需要兼容web和Native，Native需要将传递的数据JSON化
                        var data = response.data;
                        try{
                          data = JSON.parse(response.data); 

                        }catch(e){}
                        that.hasNext=data.data.hasNextPage;                
                        if(data){
                          var obj = data.data,
                              list=obj.list,
                              arr=[];
                             
                          list && list.forEach(function(value){
                          //  var reportChildList=value.childList;
                            var report={
                              talk__png:imgUrl + value.author.avatar,
                              talk__name:value.author.nickname,
                              talk__time:value.createTime,
                              talk__text:value.content,
                              replys__repeat:[]
                            };
                            //
                            var getChild=function(data){
                              for(var i=0,len=data.length;i<len;i++){
                                var childReport={
                                  name1:value.author.nickname,
                                  name2:data[i].author.nickname,
                                  reply__texts:[]
                                };

                                for(var j=0,length=data[i].content.length;j<length;j++){
                                  var obj_reply={
                                      reply__text:data[i].content.substr(j,1)
                                  };
                                  childReport.reply__texts.push(obj_reply);
                                }

                                report.replys__repeat.push(childReport);
                              }
                            }(value.childList);

                            arr.push(report);
                            
                          //  debugger
                          });
                          that.talks__repeat=that.talks__repeat.concat(arr);
                         // that.talks__repeat=obj.list;
                        /*  for(var m=0;m<that.talks__repeat.length;m++){
                             for(var n=0;n<that.talks__repeat[m].replys__repeat.length;n++){
                                 for(var i=0;i<that.talks__repeat[m].replys__repeat[n].reply__content.length;i++){
                                   that.talks__repeat[m].replys__repeat[n].reply__texts.push({
                                     reply__text:that.talks__repeat[m].replys__repeat[n].reply__content.substr(i,1)
                                   })
                                 }
                             }
                          }*/

                        }else{
                         //TODO:
                        }
                      }else{
                          //TODO:错误处理
                          //console.log('--response:--', response);
                      }
                  },function(err){
                      //console.log('---err---', err);
                      //TODO:错误处理
              });
       },
       opearte:function(description){

        var that=this;
        that.alert(description);
                  var arr=[],
                  tempPArr=[];
                  var getItem=function(text){

                                  var _tempText=[],

                                      _tempImg=[],

                                    tempImgArr=[];

                                    //去掉p

                                      _tempText=text.split("<p>").join("").split("</p>");
                                      that.alert(_tempText);
                                      //去掉Img

                                      //_tempImg=text.split("src=");
                  

                                   function opearteText(_txt){

                                      var posStartImg,posEndImg;

                                      _txt.indexOf("src=")!== -1 && (posStartImg=_txt.indexOf("src="));

                                      _txt.indexOf("title")!== -1 && (posEndImg=_txt.indexOf("title"));

                                      var subText=_txt.substring(posStartImg + 5,posEndImg - 2);

                                      var allText=_txt.substring(posEndImg + 6);

                                      arr.push(subText);

                                      if(allText.indexOf("<img")!==-1){

                                          opearteText(allText);

                                      }

                                      else{

                                        return;

                                      }
                                   }
                                   that.alert(text);
                                   opearteText(text);
                                          that.alert(_tempText);

                                  for(var i=0,len=_tempText.length;i<len;i++){

                                      if(_tempText[i].indexOf("<img")===-1 && _tempText[i].indexOf("<br/>")===-1){

                                          tempPArr.push(_tempText[i]);

                                      }

                                  }
                                  that.alert(tempPArr);
  /*
                                   

                                  for(var j=0,_len=_tempImg.length;j<_len;j++){

                                  if(_tempImg[j].indexOf("<p>")!==-1 && _tempImg[j].indexOf("<br/>")!==-1){

                                      tempImgArr.push(_tempImg[j]);

                                  }

                                }*/
                              }(description);

                            /*detailInfo:[{
                  infoText:[{
                    str:""
                  }],
                  infoImage:[{
                    img:""
                  }]
                }]*/
                            var detailInfo=[],
                              infoText=[],
                              infoImage=[],
                              obj={
                                infoText:[],
                                infoImage:[]
                              },
                              objText={
                                str:""
                              },
                              objImage={
                                img:""
                              };
                            for(var i=0,len=tempPArr.length;i<len;i++){
                              objText={
                                str:tempPArr[i]
                              };
                              that.content=that.content+tempPArr[i];
                              infoText.push(objText);
                              obj.infoText=infoText;
                            }
                            that.alert(that.content);
                        for(var j=0,_len=arr.length;j<_len;j++){
                              objImage={
                                image:arr[j]
                              };
                              
                              infoImage.push(objImage);
                              obj.infoImage=infoImage;
                            }
                            that.imageList=infoImage;
                            that.alert(that.imageList);
                            //detailInfo.push(obj);
                            //that.detailInfo=detailInfo;
       }
    },
    computed:{
      jumpPostSrc: function(){
        return "http://app.buoumall.com/post/postContainer?postId="+this.postId;
      }
    },
    created:function(){
        this._getData();
    }
    
}
</script>


<style>
.loading {
    height: 120px;
    width: 750px;
    display: -ms-flex;
    display: -webkit-flex;
    display: flex;
    -ms-flex-align: center;
    -webkit-align-items: center;
    -webkit-box-align: center;
    align-items: center;
}
.total{
  flex-direction: column;
}
.head__detail{
  flex-direction: row;
  padding-top: 20px;
  padding-bottom: 20px;
  background-color: #fafafa;
}
.head__png{
  width: 80px;
  height: 80px;
  background-color: #fff;
  border-radius: 50px;
  margin-left: 18px;
}
.name{
  font-size: 28px;
  line-height: 40px;
  color: #666666;
}
.focus{
  font-size: 24px;
  color: #cccccc;
  line-height: 40px;
  margin-right: 40px;
}
.isfocus{
  font-size: 24px;
  color: #3ba8fa;
  line-height: 44px;
  width: 100px;
  height: 44px;
  margin-right: 30px;
  margin-top: 28px;
  text-align: center;
  border: 1px solid #3ba8fa;
  border-radius: 22px;
}
.trend__head{
  font-weight: 800;
  color: #222222;
  font-size: 30px;
  margin-top: 20px;
  line-height: 50px;
  margin-left: 20px;
  margin-right: 20px;
}
.trend__text{
  color: #222222;
  font-size: 26px;
  margin-left: 20px;
  margin-right: 20px;
  margin-bottom: 20px;
  line-height: 42px;
}
.trend__img{
  height: 1065px;
  width: 710px;
  margin-left: 20px;
  margin-right: 20px;
  margin-bottom: 20px;
}
.liker{
  height: 120px;
  flex-direction: row;
  width: 750px;
  overflow-x: scroll;
}
.liker__num{
  flex-direction: column;
  color: #ffffff;
  height: 80px;
  width: 80px;
  border-radius: 40px;
  background-color: #ff404b;
  align-items: center;
  justify-content: center;
  margin-top: 20px;
  margin-left: 20px;
}
.liker__head{
  height: 80px;
  width: 80px;
  background-color: #fff;
  border-radius: 40px;
  margin-top: 20px;
  margin-left: 20px;
}
.talk__number{
  height: 80px;
  color: #333333;
  font-size: 28px;
  line-height: 80px;
  padding-left: 20px;
  border-bottom: 1px solid #efeff0;
}
.talk{
  flex-direction: row;
  margin-top: 24px;
  margin-left: 20px;
  margin-right: 20px;
}
.talk__png{
  height: 80px;
  width: 80px;
  border-radius: 40px;
}
.talk__content{
  margin-left: 20px;
  width: 610px;
}
.talk__head{
  flex-direction: row;
  justify-content: space-between;
  
}
.talk__name{
   font-size: 26px;
   color: #666666;
}
.talk__time{
  font-size: 22px;
  color: #cccccc;
}
.talk_main{
  font-size: 26px;
  line-height: 42px;
  margin-top: 10px;
  color: #222222;
}
.triangle{
  width: 0;
    height: 0;
    border-left: 15px solid transparent;
    border-right: 15px solid transparent;
    border-bottom: 20px solid #efeff0;
    margin-left: 145px;
    margin-top: 10px;
}
.replys{
  width: 610px;
  padding-left: 20px;
  padding-right: 20px;
  padding-top: 10px;
  padding-bottom: 10px;
  background-color: #efeff0;
  margin-left: 120px;
  flex-direction: row;
  flex-wrap: wrap;
}
.reply__name{
   font-size: 26px;
   color: #666666;
   line-height: 42px;
}
.reply{
  color: #ff555f;
  font-size: 26px;
  line-height: 42px;
  margin-left: 5px;
  margin-right: 5px;
}
.replys1{
 width:700;
}
.reply__content{
  font-size: 26px;
  color: #222222;
  line-height: 42px;
}
.download{
  height: 60px;
  width: 260px;
  margin-top: 20px;
  margin-left: 245px;
  margin-bottom: 20px;
  background-color: #ff555f;
  color: #ffffff;
  font-size: 24px;
  text-align: center;
  line-height: 60px;
  border-radius: 30px;
}
</style>
